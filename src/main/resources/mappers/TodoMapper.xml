<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.todo.mapper.TodoMapper"> <!-- 인터페이스 이름과 반드시 일치해야한다-->

    <select id="getTime" resultType="string"><!--select의 id는 반드시 TodoMapper의 메소드이름과 일치해야한다-->
        select now()
    </select>

    <!--Todo등록기능 구현 MyBatis를 이용하면 ?대신에 #{} 파라미터를 처리
    #{}부분은 PreparedStatement로 다시 변경되면서 ?로 처리되고, 주어진 객체의 get파라미터()을 호출한 결과를 적용하게된다.-->
    <insert id="insert">
        insert into tbl_todo(title, dueDate, writer) values (#{title}, #{dueDate}, #{writer})
    </insert>

    <!-- TodoMapper의 selectAll() 실제쿼리, resultType은 JDBC의 ResultSet의 한 행(row)을 어떤 타입의 객체로 만들것인지 지정-->
    <select id="selectAll" resultType="com.example.todo.domain.TodoVO">
        select * from tbl_todo order by tno desc
    </select>

    <!-- TodoMapper의 selectOne() 실제쿼리 -->
    <select id="selectOne" resultType="com.example.todo.domain.TodoVO">
        select * from tbl_todo where tno = #{tno}
    </select>

    <!--TodoMapper의 delete()의 실체쿼리-->
    <delete id="delete">
        delete from tbl_todo where tno = #{tno}
    </delete>

    <!--TodoMapper의 update()의 실제쿼리-->
    <update id="update">
        update tbl_todo set title=#{title}, dueDate=#{dueDate}, finished=#{finished} where tno=#{tno}
    </update>

    <!--동적쿼리부분을 sql로 분리-->
    <!--types에 따른 동적쿼리를 만들기 위해 foreach,if,where을 넣어서 만든다-->
    <sql id="search">
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR ">
                    <if test="type == 't'.toString()">
                        title like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">
                        writer like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>

           <if test="finished">
               <trim prefix="and"> <!--상황에 따라 and 추가-->
                   finished = 1
               </trim>
           </if>

          <if test="from != null and to != null">
              <trim prefix="and">
                  dueDate between #{from} and #{to}
              </trim>
          </if>
        </where>
    </sql>

    <!--TodoMapper의 페이징처리된 목록 selectList()의 실제쿼리-->
    <select id="selectList" resultType="com.example.todo.domain.TodoVO">
        select * from tbl_todo

        <include refid="search"></include>

        order by tno desc limit #{skip}, #{size}
    </select>

    <!--TodoMapper의 전체 데이터 수 getCount()의 실제쿼리-->
    <select id="getCount" resultType="int">
        select count(tno) from tbl_todo
        <include refid="search"></include>
    </select>
</mapper>